swagger: "2.0"
info:
  description: "This is a Flask Boilerplate Project.
  You can find out more about github"
  version: "1.0.0"
  title: "Flask Boilerplate"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "thinhngo1198@gmail.com"
host: "localhost:5000"
basePath: "/v1"
tags:
- name: "User"
  description: "Operations about user"
schemes:
- "https"
- "http"
servers:
  "/"
paths:
  /token/:
    post:
      tags:
        - "User"
      summary: ""
      description: ""
      operationId: "token"
      consumes:
      - "appplication/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            password:
              type: "string"
      responses:
        "200":
          description: ""
          schema:
            type: "object"
            properties:
              access_token:
                type: "string"
              refresh_token:
                type: "string"
  /token/refresh/:
    get:
      tags:
        - "User"
      summary: ""
      description: ""
      operationId: "token_refresh"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Bearer {refresh_token}"
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/JwtObject"
  /register/:
    post:
      tags:
        - "User"
      summary: ""
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        schema:
          type: "object"
          required:
          - "name"
          properties:
            name:
              type: "string"
            email:
              type: "string"
            password1:
              type: "string"
            password2:
              type: "string"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/User"
  /register/verify/:
    post:
      tags:
      - "User"
      summary: ""
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: body
        description: ""
        schema:
          type: object
          required:
          - email
          - key
          properties:
            email:
              type: string
            key:
              type: string
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/JwtObject"
  /register/resend/:
    post:
      tags:
      - "User"
      summary: ""
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: body
        description: ""
        schema:
          type: object
          required:
          - email
          properties:
            email:
              type: string
      responses:
        200:
          description: "Sent"
  /profile/:
    get:
      tags:
      - "User"
      summary: ""
      description: ""
      operationId: "user_profile"
      produces:
      - "application/json"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/User"
      security:
        - Bearer: []

securityDefinitions:
 Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  JwtObject:
    type: "object"
    properties:
      access_token:
        type: "string"
      refresh_token:
        type: "string"
  User:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"